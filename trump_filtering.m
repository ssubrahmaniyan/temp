[SignalIn, Fs] = audioread("trump_cut.wav")

SignalOut1 = filter(Filter1, SignalIn); %This replicates what is done in the video by using a low pass filter
SignalOut2 = filter(Filter2, SignalIn); %This is a better method using a bandcut filter to remove only that unnatural spike at around 7kHz

sound(SignalIn, Fs);
%sound(SignalOut1, Fs);
%sound(SignalOut2, Fs);

audiowrite("trump_cut_cleaned_lowpass.wav", SignalOut1, Fs);
audiowrite("trump_cut_cleaned_bandcut.wav", SignalOut2, Fs);

function Hd = Filter1
%FILTER Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 23.2 and Signal Processing Toolbox 23.2.
% Generated on: 02-Jul-2024 00:02:25

% Butterworth Lowpass filter designed using FDESIGN.LOWPASS.

% All frequency values are in Hz.
Fs = 44100;  % Sampling Frequency

N  = 100;   % Order
Fc = 5000;  % Cutoff Frequency

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.lowpass('N,F3dB', N, Fc, Fs);
Hd = design(h, 'butter');
end

function Hd = Filter2
%FILTERS Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 23.2 and Signal Processing Toolbox 23.2.
% Generated on: 02-Jul-2024 00:01:55

% Butterworth Bandstop filter designed using FDESIGN.BANDSTOP.

% All frequency values are in Hz.
Fs = 44100;  % Sampling Frequency
N = 100;
Fc1 = 6800;  % First Cutoff Frequency
Fc2 = 7500;  % Second Cutoff Frequency

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.bandstop('N,F3dB1,F3dB2', N, Fc1, Fc2, Fs);
Hd = design(h, 'butter');
end
